# ========================================
# RICHARD BACKEND - ENVIRONMENT VARIABLES
# ========================================
# Copy this file to .env and update the values
# Never commit the actual .env file to version control

# ========================================
# DATABASE CONFIGURATION
# ========================================
# PostgreSQL Database URL
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL="postgresql://username:password@localhost:5432/richard_db"

# ========================================
# JWT AUTHENTICATION
# ========================================
# Generate strong, random secrets for production
# Use: openssl rand -base64 64
JWT_SECRET="your-super-secret-jwt-key-here-change-in-production"
JWT_REFRESH_SECRET="your-super-secret-refresh-key-here-change-in-production"

# Token expiration times
JWT_EXPIRES_IN="15m"          # Access token expires in 15 minutes
JWT_REFRESH_EXPIRES_IN="7d"   # Refresh token expires in 7 days

# ========================================
# SERVER CONFIGURATION
# ========================================
# Server port (default: 3001 for backend, 3000 for frontend)
PORT=3001
NODE_ENV="development"        # development | production | test

# App information
APP_NAME="Richard Backend API"
APP_VERSION="1.0.0"

# ========================================
# CORS CONFIGURATION
# ========================================
# Allowed origins for CORS (comma-separated)
# For development: include your Flutter app's IP and localhost
# For production: use your actual domain
CORS_ORIGIN="http://localhost:3000,http://192.168.0.154:3000,http://192.168.0.154:3001"

# ========================================
# EMAIL CONFIGURATION (BREVO API)
# ========================================
# Brevo (formerly Sendinblue) API configuration
# Get your API key from: https://app.brevo.com/settings/keys/api

# Brevo API Key (for transactional emails)
BREVO_API_KEY="xkeysib-your-actual-api-key-here"

# Email sender information
FROM_EMAIL="noreply@yourdomain.com"
FROM_NAME="Richard App"

# ========================================
# EMAIL CONFIGURATION (SMTP - Alternative)
# ========================================
# Uncomment and configure if you prefer SMTP over Brevo API
# SMTP_HOST="smtp-relay.brevo.com"
# SMTP_PORT="587"
# SMTP_USER="your_brevo_email@example.com"
# SMTP_PASS="your_brevo_smtp_key"

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
# Upload directory (for file-based uploads - currently using base64)
UPLOAD_DIR="./uploads"
MAX_FILE_SIZE=5242880  # 5MB in bytes

# ========================================
# FRONTEND CONFIGURATION
# ========================================
# Frontend URL for deep links and redirects
FRONTEND_URL="richardapp://reset-password"

# ========================================
# RATE LIMITING CONFIGURATION
# ========================================
# Rate limiting settings (requests per time window)
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=100  # Maximum requests per window

# Specific rate limits for auth endpoints
AUTH_RATE_LIMIT_MAX=10       # General auth endpoints
LOGIN_RATE_LIMIT_MAX=5       # Login attempts per window
REGISTER_RATE_LIMIT_MAX=3    # Registration attempts per window
RESET_RATE_LIMIT_MAX=5       # Password reset attempts per window

# ========================================
# SECURITY CONFIGURATION
# ========================================
# Password hashing rounds (higher = more secure, slower)
BCRYPT_ROUNDS=12

# Session configuration
SESSION_SECRET="your-session-secret-key-here"

# ========================================
# LOGGING CONFIGURATION
# ========================================
# Log level: error | warn | info | debug
LOG_LEVEL="info"

# Enable/disable request logging
ENABLE_REQUEST_LOGGING=true

# ========================================
# DEVELOPMENT CONFIGURATION
# ========================================
# Enable debug mode (shows detailed error messages)
DEBUG=true

# Enable API documentation
ENABLE_SWAGGER=false

# ========================================
# PRODUCTION CONFIGURATION
# ========================================
# Uncomment and configure for production deployment

# # Database (Production)
# DATABASE_URL="postgresql://prod_user:prod_password@prod_host:5432/richard_prod"

# # Server (Production)
# PORT=3001
# NODE_ENV="production"

# # CORS (Production)
# CORS_ORIGIN="https://yourdomain.com,https://app.yourdomain.com"

# # Email (Production)
# BREVO_API_KEY="xkeysib-your-production-api-key"
# FROM_EMAIL="noreply@yourdomain.com"

# # Frontend (Production)
# FRONTEND_URL="https://yourdomain.com"

# # Security (Production)
# DEBUG=false
# LOG_LEVEL="warn"

# ========================================
# DEPLOYMENT PLATFORMS
# ========================================
# Uncomment and configure for specific deployment platforms

# # Heroku
# # PORT will be set automatically by Heroku
# # DATABASE_URL will be set by Heroku Postgres addon

# # Railway
# # PORT will be set automatically by Railway
# # DATABASE_URL will be set by Railway PostgreSQL service

# # Vercel
# # VERCEL=1
# # VERCEL_ENV=production

# # DigitalOcean App Platform
# # PORT=8080

# ========================================
# MONITORING & ANALYTICS
# ========================================
# Uncomment to enable monitoring services

# # Sentry (Error tracking)
# SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# # New Relic (Application monitoring)
# NEW_RELIC_LICENSE_KEY="your-new-relic-license-key"
# NEW_RELIC_APP_NAME="Richard Backend"

# # DataDog (Logging and monitoring)
# DD_API_KEY="your-datadog-api-key"
# DD_SERVICE="richard-backend"

# ========================================
# EXTERNAL SERVICES
# ========================================
# Uncomment and configure for additional services

# # Redis (for caching and sessions)
# REDIS_URL="redis://localhost:6379"

# # AWS S3 (for file storage)
# AWS_ACCESS_KEY_ID="your-aws-access-key"
# AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
# AWS_REGION="us-east-1"
# AWS_S3_BUCKET="your-s3-bucket-name"

# # Cloudinary (for image processing)
# CLOUDINARY_CLOUD_NAME="your-cloudinary-cloud-name"
# CLOUDINARY_API_KEY="your-cloudinary-api-key"
# CLOUDINARY_API_SECRET="your-cloudinary-api-secret"

# ========================================
# NOTES
# ========================================
# 1. Generate strong secrets using: openssl rand -base64 64
# 2. Never commit .env file to version control
# 3. Use different values for development, staging, and production
# 4. Keep your API keys secure and rotate them regularly
# 5. Test email functionality with a real email address
# 6. Configure CORS origins properly for security
# 7. Use HTTPS in production for all external URLs